;;; org-fixup.el - to make life easier for folks without GNU make
;;
;; Author: Achim Gratz
;; Keywords: outlines, hypermedia, calendar, wp
;; Homepage: http://orgmode.org
;;
;; This file is not yet part of GNU Emacs.
;;
;; GNU Emacs is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3, or (at your option)
;; any later version.

;; GNU Emacs is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING.  If not, write to the
;; Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;; Commentary:

(require 'find-func)
(require 'org-compat)
(require 'autoload)

(defun org-make-org-version (org-release org-git-version odt-dir)
  (find-file "org-version.el")
  (erase-buffer)
  (insert ";;; org-version.el --- autogenerated file, do not edit\n;;\n;;; Code:\n")
  (insert ";;;\#\#\#autoload\n")
  (insert "(defconst org-release \"" org-release "\"\n")
  (insert "  \"The release version of org-mode.\n")
  (insert "  Inserted by installing org-mode or when a release is made.\")\n")
  (insert ";;;\#\#\#autoload\n")
  (insert "(defconst org-git-version \"" org-git-version "\"\n")
  (insert "  \"The Git version of org-mode.\n")
  (insert "  Inserted by installing org-mode or when a release is made.\")\n")
  (insert ";;;\#\#\#autoload\n")
  (insert "(defconst org-odt-data-dir \"" odt-dir "\"\n")
  (insert "  \"The location of ODT styles.\")\n")
  (insert "\f\n;; Local Variables:\n;; version-control: never\n")
  (insert ";; no-byte-compile: t\n")
  (insert ";; coding: utf-8\n;; End:\n;;; org-version.el ends here\n")
  (save-buffer))

(defun org-make-org-install (absfile)
  (find-file absfile)
  (erase-buffer)
  (insert ";;; org-install.el --- autogenerated file, do not edit\n;;\n;;; Code:\n")
  (let ((files (directory-files (file-name-directory absfile) 'full "^[^.#~]*\\.el$")))
    (mapc (lambda (f) (generate-file-autoloads f)) files))
  (insert "\f\n(provide 'org-install)\n")
  (insert "\f\n;; Local Variables:\n;; version-control: never\n")
  (insert ";; no-byte-compile: t\n;; no-update-autoloads: t\n")
  (insert ";; coding: utf-8\n;; End:\n;;; org-install.el ends here\n")
  (save-buffer))

(defun org-fixup ()
  (message "might as well do something, but not now")
)

(provide 'org-fixup)


;; Local Variables:
;; no-byte-compile: t
;; coding: utf-8
;; End:
;;; org-fixup.el ends here
